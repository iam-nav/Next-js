{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\study\\\\Next.js\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2,\n      columnNumber: 5\n    }\n  }, console.log(posts), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  }, \"My Portfolio Site\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, \"Welcome to my portfolio! This is designed with Next.js!\"));\n};\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/study/Next.js/pages/index.js"],"names":["Index","posts","console","log"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAHJ,CADU;AAAA,CAAd;;KAAMD,K;;AAuBN,eAAeA,KAAf","sourcesContent":["const Index = ({posts}) => (\r\n    <div>\r\n        {console.log(posts)}\r\n        <h1>My Portfolio Site</h1>\r\n        <p>Welcome to my portfolio! This is designed with Next.js!</p>\r\n    </div>\r\n)\r\n\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json())\r\n    const data =    await response.json()\r\n    console.log(data)\r\n    .then(data => console.log(data));\r\n    // const data = response.json()\r\n    return {\r\n      props: {\r\n          posts:'hello'\r\n      }, // will be passed to the page component as props\r\n    }\r\n  }\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}